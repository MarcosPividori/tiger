/* EXPECTED-COMP: "Successful" */
/* EXPECTED-RUN: "echo 0 | ./a.out" => "1" */
/* EXPECTED-RUN: "echo 1 | ./a.out" => "1" */
/* EXPECTED-RUN: "echo 4 | ./a.out" => "24" */
/* EXPECTED-RUN: "echo 9 | ./a.out" => "362880" */
/* define a recursive function */
let
  /* print integer to stdout */
  function printInt (i : int) =
    let function f (i : int) =
      if i > 0
	      then (f (i/10); print (chr (i-i/10*10+ord ("0"))))
    in if i < 0 then (print ("-"); f (-i))
       else if i>0 then f (i)
       else print ("0")
    end
  /* calculate n! */
  function fact (n : int) : int =
    if  n = 0
      then 1
      else n * fact (n - 1)
  var n := ord(getchar ()) - ord("0")
in
  printInt(fact (n)); 0
end
